
scalar Expression
scalar JSON
scalar Date
scalar DateTime
scalar NULL

enum CONTENT_EVENT {
    CREATE
    UPDATE
    DELETE
    RECOVER
    REVERT
}

enum ORDER {
    ASC
    DESC
}

enum OPERATOR {
    EQ
    IS
    NEQ
    LT
    LTE
    GT
    GTE
    IN
    NIN
    CONTAINS
    NCONTAINS
}

enum LOG_LEVEL {
    NOTICE
    WARNING
    ERROR
    CRITICAL
    EMERGENCY
}

type UniteLogEntry {
    level: LOG_LEVEL!
    message: String!
    username: String
    created: DateTime!
}

directive @hide(
    if: Expression!
) on FIELD_DEFINITION | OBJECT

directive @access(
    # used in schema extender
    query: Expression
    mutation: Expression

    # used in resolver
    create: Expression
    read: Expression
    update: Expression
    delete: Expression
    permanent_delete: Expression
) on FIELD_DEFINITION | OBJECT

directive @valid(
    if: Expression!
    message: String
    groups: [CONTENT_EVENT!]
) on FIELD_DEFINITION | OBJECT

directive @webhook(
    if: Expression!
    url: String!
    groups: [CONTENT_EVENT!]
) on OBJECT

directive @required on FIELD_DEFINITION

type UniteContentListPermissions {
    create: Boolean!
}

type UniteContentEntityPermissions {
    read: Boolean!
    update: Boolean!
    delete: Boolean!
    permanent_delete: Boolean!
    user_invite: Boolean!
}

type UniteContentRevision {
    version: Int!
    operation: CONTENT_EVENT!
    operationTime: DateTime!
    operatorName: String!
    operatorType: String
    operatorId: ID
    content: UniteFieldable!
}

type UniteContentMeta {
    id: ID
    version: Int!
    revisions: [UniteContentRevision!]
    deleted: DateTime
    permissions: UniteContentEntityPermissions!
}

interface UniteFieldable {
    _meta: UniteContentMeta
}

interface UniteUser {
    id: ID
    username: String!
    _meta: UniteContentMeta
}

interface UniteContent {
    id: ID
    _meta: UniteContentMeta
}

interface UniteSingleContent {
    _meta: UniteContentMeta
}

interface UniteEmbeddedContent {
    id: ID
    _meta: UniteContentMeta
}

interface UniteContentResult {
    total: Int!
    result: [UniteFieldable!]
}

input UniteFilterInput {
    field: String
    path: [String]
    operator: OPERATOR
    value: [String]
    AND: [UniteFilterInput]
    OR: [UniteFilterInput]
}

type UniteFilter {
    field: String
    path: [String]
    operator: OPERATOR
    value: [String]
    AND: [UniteFilter]
    OR: [UniteFilter]
}

input UniteOrderByInput {
    field: String!
    order: ORDER!
}

type UniteOrderBy {
    field: String!
    order: ORDER!
}

type UniteQuery {
    _version: String!
}

type UniteMutation {
    _version: String!
    generateJWT: String! @hide(if: "user.isAnonymous()")
    generateLongLivingJWT: String! @hide(if: "not user.isFullyAuthenticated()")
}
