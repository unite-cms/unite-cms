# Contains all security related services like authenticators and voters.
services:

  # For handling API authentication we use the Symfony Guard system and implement a custom Authenticator and
  # UserProvider.
  unite.cms.api_key_authenticator:
    class: UniteCMS\CoreBundle\Security\ApiKeyAuthenticator
    public: false

  unite.cms.api_key_provider:
    class: UniteCMS\CoreBundle\Security\ApiKeyUserProvider
    arguments: ['@request_stack', '@doctrine.orm.default_entity_manager']
    public: false

  # We implement a custom RequestMatcher for the API firewall that also handles fallback to the main firewall if a
  # special Header Flag is set. This allows logged in user to access the API (for example in the admin backend) without
  # the need of an access token.
  unite.cms.api_request_matcher:
    class: UniteCMS\CoreBundle\Security\ApiRequestMatcher
    arguments: ['%routing_approach%', '%allowed_hostname%', '%identifier_url_pattern%']
    public: false


  # Security voters to check if a user can perform a certain action (like VIEW oder CREATE) on an object (like Content).
  UniteCMS\CoreBundle\Security\Voter\OrganizationVoter:
    public: false
    tags: [security.voter]

  UniteCMS\CoreBundle\Security\Voter\DomainVoter:
    public: false
    tags: [security.voter]

  UniteCMS\CoreBundle\Security\Voter\ContentVoter:
    public: false
    tags: [security.voter]

  UniteCMS\CoreBundle\Security\Voter\DeletedContentVoter:
    public: false
    tags: [security.voter]

  UniteCMS\CoreBundle\Security\Voter\FieldableFieldVoter:
    public: false
    tags: [security.voter]

  UniteCMS\CoreBundle\Security\Voter\SettingVoter:
    public: false
    tags: [security.voter]

  UniteCMS\CoreBundle\Security\Voter\DomainMemberVoter:
    public: false
    tags: [security.voter]

  UniteCMS\CoreBundle\Security\Voter\OrganizationAdminVoter:
    public: false
    tags: [security.voter]

  UniteCMS\CoreBundle\Security\Voter\PlatformAdminVoter:
    public: false
    tags: [security.voter]
