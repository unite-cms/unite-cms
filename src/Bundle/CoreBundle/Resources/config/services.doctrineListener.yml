# Contains all doctrine event listeners.
services:

  # When removing an OrganizationMember object, also all DomainMember objects of this user must be removed.
  UniteCMS\CoreBundle\Subscriber\RemoveMember:
    public: false
    tags:
      - { name: doctrine.event_listener, event: preRemove }

  # When adding an DomainMember, also an OrganizationMember for this user and organization must be added.
  UniteCMS\CoreBundle\Subscriber\AddMember:
    public: false
    tags:
      - { name: doctrine.event_listener, event: prePersist }

  # When deleting fieldable content, remove all log entries.
  UniteCMS\CoreBundle\Subscriber\DeleteFieldableContentSubscriber:
    public: false
    tags:
      - { name: doctrine.event_listener, event: preRemove }

  # When deleting a fieldable field, remove all content for this field.
  UniteCMS\CoreBundle\Subscriber\DeleteFieldableFieldSubscriber:
    public: false
    tags:
      - { name: doctrine.event_listener, event: preRemove }

  # When inserting, updating or deleting content, the dispatcher notifies all parts of unite CMS about this change.
  UniteCMS\CoreBundle\Subscriber\ContentEventDispatcher:
    public: false
    arguments: ['@unite.cms.field_type_manager']
    tags:
      - { name: doctrine.event_listener, event: prePersist }
      - { name: doctrine.event_listener, event: preUpdate }
      - { name: doctrine.event_listener, event: preRemove }

  # When inserting, updating or deleting content, the webhooks (if any defined) should be fired
  UniteCMS\CoreBundle\Subscriber\WebHookSubscriber:
    public: false
    arguments: ['@unite.cms.webhook_manager']
    tags:
      - { name: doctrine.event_listener, event: preRemove, lazy: true }
      - { name: doctrine.event_listener, event: postPersist, lazy: true }
      - { name: doctrine.event_listener, event: postUpdate, lazy: true }

  # Syncs the domain config in filesystem with the config property of domain entities
  UniteCMS\CoreBundle\Subscriber\DomainConfigSubscriber:
      public: false
      arguments: ['@unite.cms.domain_config_manager']
      tags:
        - { name: doctrine.event_listener, event: postPersist }
        - { name: doctrine.event_listener, event: preUpdate }
        - { name: doctrine.event_listener, event: postRemove }

  # Invalidate schema cache, if domain org or domain accessor changed
  UniteCMS\CoreBundle\Subscriber\SchemaCacheInvalidatorSubscriber:
        public: false
        arguments: ['@cache.app.taggable']
        tags:
          - { name: kernel.event_subscriber }
          - { name: doctrine.event_listener, event: postPersist }
          - { name: doctrine.event_listener, event: postPersist }
          - { name: doctrine.event_listener, event: preRemove }
