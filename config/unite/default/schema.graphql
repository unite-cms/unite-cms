
enum ArticleStatus {
    """This is just a test name"""
    DRAFT
    PUBLISHED
}

type SEO implements UniteEmbeddedContent {
    id: ID
    _meta: UniteContentMeta
    headline: String @textField
    metaDescription: String @textField
}


"""Media"""
type Media implements UniteContent {
    id: ID
    _meta: UniteContentMeta
    alt: String @textField
    title: String @textField
    seq: Int! @sequenceField

    date: Date @dateField
    dateTime: DateTime @dateTimeField

    file: UniteMediaFile @mediaFileField ( s3:
        {
            key: "%(S3_KEY)%",
            secret: "%(S3_SECRET)%",
            region: "",
            version: "latest",
            endpoint: "http://127.0.0.1:9001"
            bucket: "test",
            path: "/uploads",
            use_path_style_endpoint: true,
            tmp_path: "/tmp"
        }
    )
    files: [UniteMediaFile!] @mediaFileField ( s3:
    {
        key: "%(S3_KEY)%",
        secret: "%(S3_SECRET)%",
        region: "",
        version: "latest",
        endpoint: "http://127.0.0.1:9001"
        bucket: "test",
        path: "/uploads",
        use_path_style_endpoint: true,
        tmp_path: "/tmp"
    }
    )
}

type Text implements UniteEmbeddedContent {
    id: ID
    _meta: UniteContentMeta
    text: String @textField
}

type Headline implements UniteEmbeddedContent {
    id: ID
    _meta: UniteContentMeta
    headline: String @textField
}

union Blocks = Text | Headline


"""Categories"""
type DemoCategory implements UniteContent {
    _meta: UniteContentMeta
    id: ID
    name: String! @textField
    articles(filter: UniteFilterInput, orderBy: [UniteOrderByInput!], limit: Int = 20, offset: Int = 0): UniteContentResult @referenceOfField(content_type: "DemoArticle", reference_field: "main_category")
    parent: DemoCategory @referenceField
    children: UniteContentResult @referenceOfField(content_type: "DemoCategory", reference_field: "parent")
    block: Blocks @embeddedField
    blocks: [Blocks!] @embeddedField
}

type TeaserRegion implements UniteEmbeddedContent {
    id: ID
    _meta: UniteContentMeta
    title: String @textField @valid(if: "value == 'foo'", message: "Es ist nur 'foo' erlaubt!")
    intro_text: String @textField

    nestedTeaser: [TeaserRegion!] @embeddedField
    main_category: DemoCategory @referenceField
    subcategories: [DemoCategory!] @referenceField
}

enum ArticleLocales {
    """Deutsch"""
    de

    """Englisch"""
    en
}

"""Articles"""
type DemoArticle implements UniteContent & UniteTranslatableContent {
    _meta: UniteContentMeta

    locale: ArticleLocales @choiceField
    translations(locales: [ArticleLocales!], includeSelf: Boolean = false): [UniteTranslatableContent!]

    id: ID
    name: String @textField

    """ Article content"""
    content: String @textField(escape: false)

    """ Article content"""
    extra_content: [String!] @textField(escape: false)

    """Main Category"""
    main_category: DemoCategory @referenceField

    geo: UniteGeoLocation @geoLocationField
    geos: [UniteGeoLocation!] @geoLocationField

    teaser: TeaserRegion @embeddedField
    teasers: [TeaserRegion!] @embeddedField

    boolTest: Boolean @booleanField
    boolTest1: Boolean @booleanField
    boolTest2: [Boolean!] @booleanField

    #testFile: UniteMediaFile @mediaFileField(todo: "FOO")
    #testFile1: UniteMediaFile! @mediaFileField(todo: "FOO")
    #testFiles: [UniteMediaFile!] @mediaFileField(todo: "FOO")

}


"""Admin Users"""
type Admin implements UniteUser
@passwordAuthenticator(passwordField: "password")
@emailPasswordReset(emailField: "username", passwordField: "password")
@emailInvite(if: "%(IS_ADMIN)%", emailField: "username", passwordField: "password") {
    _meta: UniteContentMeta
    id: ID
    username: String! @emailField
    password: NULL @passwordField

    teaser: TeaserRegion @embeddedField
}

"""OtherUser Users"""
type OtherUser implements UniteUser
@passwordAuthenticator(passwordField: "password")
@emailPasswordReset(emailField: "username", passwordField: "password")
@emailInvite(if: "%(IS_ADMIN)%", emailField: "username", passwordField: "password") {
    _meta: UniteContentMeta
    id: ID
    username: String! @emailField
    password: NULL @passwordField

    teaser: TeaserRegion @embeddedField
}


"""Demo Settings"""
type DemoSettings implements UniteSingleContent {
    _meta: UniteContentMeta
    title: String @textField
}
